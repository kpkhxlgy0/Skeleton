XCore.UIKit = XCore.UIKit or {}

--@RefType [XCore.UIKit#CS.TinaX.UIKit.IUIMgr]
local UIKitMgr = CS.TinaX.UIKit.UIKit.I

---设置当前使用的UI组
XCore.UIKit.SetUIGroup = function(ui_group)
    CS.TinaX.UIKit.UIKit.I:SetUIGroup(ui_group)
end

---设置当前使用的UI组,返回UIEntity接口
XCore.UIKit.OpenUI = function(data)
    --[[
        data = {
            ui_name = "uiname",
            ui_path = "ui_path",    --可选项，不建议使用
            use_mask = true/false,
            smart_close = true/false,  --点击遮罩区域可否关闭遮罩所附在的UI
            data = 启动附带参数，单个参数或table
        }
    ]]
    local ui_path = data.ui_path or nil
    local ui_name = data.ui_name or nil
    local use_mask = data.use_mask or false
    local smart_close = data.smart_close or false
    if use_mask == false then smart_close = false end
    local param_data = data.data or nil
    local data_isTable = false
    if param_data ~= nil and type(param_data) == "table" then
        data_isTable = true 
    end
    if ui_name == nil and ui_path == nil then
        printE("[TinaX][UIKit] 打开UI失败：参数中未传递有效的获取UI的方式")
        return
    end
    if ui_path ~= nil then
        if data_isTable then
            return CS.TinaX.UIKit.UIKit.I:OpenUIByPathWhitLuaParam(ui_path,param_data,ui_name,use_mask,smart_close)
        else
            return CS.TinaX.UIKit.UIKit.I:OpenUIByPath(ui_path,param_data,ui_name,use_mask,smart_close)
        end
    else
        if data_isTable then
            return CS.TinaX.UIKit.UIKit.I:OpenUIWhitLuaParam(ui_name,param_data,use_mask,smart_close)
        else
            return CS.TinaX.UIKit.UIKit.I:OpenUI(ui_name,param_data,use_mask,smart_close)
        end
    end
    
end

--@desc: 关闭UI通用方法
--@ui_name_or_id: [string] UI名
--@data: 关闭UI传递的参数,可空
XCore.UIKit.CloseUI = function(ui_name_or_id,data)
    if data ~= nil and type(data) == "table" then
        --带了一个table参数
        if UIKitMgr.IsAdvanced then
            UIKitMgr:CloseUIWithLuaParam(tonumber(ui_name_or_id),data)
        else
            UIKitMgr:CloseUIWithLuaParam(tostring(ui_name_or_id),data)
        end
    else
        --可能没带参数，或者带了个普通的参数
        if UIKitMgr.IsAdvanced then
            UIKitMgr:CloseUI(tonumber(ui_name_or_id),data)
        else
            UIKitMgr:CloseUI(tostring(ui_name_or_id),data)
        end
    end
    
end

---隐藏UI
XCore.UIKit.HideUI = function(ui_name_or_id)
    if UIKitMgr.IsAdvanced then
        UIKitMgr:HideUI(tonumber(ui_name_or_id))
    else
        UIKitMgr:HideUI(tostring(ui_name_or_id))
    end
end

---显示UI
XCore.UIKit.ShowUI = function(ui_name_or_id)
    if UIKitMgr.IsAdvanced then
        UIKitMgr:ShowUI(tonumber(ui_name_or_id))
    else
        UIKitMgr:ShowUI(tostring(ui_name_or_id))
    end
end

--@desc: 通过寻址路径关闭UI
--@data 关闭UI时附带的参数
XCore.UIKit.CloseUI_ByPath = function(ui_path,data)
    if data ~= nil and type(data) == "table" then
        --带了一个table参数
        UIKitMgr:CloseUIByPathWithLuaParam(ui_path,data)
    else
        UIKitMgr:CloseUIByPath(ui_path,data)
    end
end

---隐藏UI，使用Path
XCore.UIKit.HideUI_ByPath = function(ui_path)
    UIKitMgr:HideUIByPath(ui_path)
end

---显示UI，使用Path
XCore.UIKit.ShowUI_ByPath = function(ui_path)
    CS.TinaX.UIKit.UIKit.I:ShowUIByPath(ui_name)
end

--[[
    @desc: 设置UI组
    author:yomunsam
    time:2019-03-06 16:37:33
    @return: null
    --@ui_group: [CS.TinaX.UIKit.UIGroupConf] UI组对象
]]
function XCore.UIKit.SetUIGroup(ui_group)
    UIKitMgr:SetUIGroup(ui_group)
end